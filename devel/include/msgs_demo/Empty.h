// Generated by gencpp from file msgs_demo/Empty.msg
// DO NOT EDIT!


#ifndef MSGS_DEMO_MESSAGE_EMPTY_H
#define MSGS_DEMO_MESSAGE_EMPTY_H

#include <ros/service_traits.h>


#include <msgs_demo/EmptyRequest.h>
#include <msgs_demo/EmptyResponse.h>


namespace msgs_demo
{

struct Empty
{

typedef EmptyRequest Request;
typedef EmptyResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Empty
} // namespace msgs_demo


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::msgs_demo::Empty > {
  static const char* value()
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const ::msgs_demo::Empty&) { return value(); }
};

template<>
struct DataType< ::msgs_demo::Empty > {
  static const char* value()
  {
    return "msgs_demo/Empty";
  }

  static const char* value(const ::msgs_demo::Empty&) { return value(); }
};


// service_traits::MD5Sum< ::msgs_demo::EmptyRequest> should match 
// service_traits::MD5Sum< ::msgs_demo::Empty > 
template<>
struct MD5Sum< ::msgs_demo::EmptyRequest>
{
  static const char* value()
  {
    return MD5Sum< ::msgs_demo::Empty >::value();
  }
  static const char* value(const ::msgs_demo::EmptyRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::msgs_demo::EmptyRequest> should match 
// service_traits::DataType< ::msgs_demo::Empty > 
template<>
struct DataType< ::msgs_demo::EmptyRequest>
{
  static const char* value()
  {
    return DataType< ::msgs_demo::Empty >::value();
  }
  static const char* value(const ::msgs_demo::EmptyRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::msgs_demo::EmptyResponse> should match 
// service_traits::MD5Sum< ::msgs_demo::Empty > 
template<>
struct MD5Sum< ::msgs_demo::EmptyResponse>
{
  static const char* value()
  {
    return MD5Sum< ::msgs_demo::Empty >::value();
  }
  static const char* value(const ::msgs_demo::EmptyResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::msgs_demo::EmptyResponse> should match 
// service_traits::DataType< ::msgs_demo::Empty > 
template<>
struct DataType< ::msgs_demo::EmptyResponse>
{
  static const char* value()
  {
    return DataType< ::msgs_demo::Empty >::value();
  }
  static const char* value(const ::msgs_demo::EmptyResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // MSGS_DEMO_MESSAGE_EMPTY_H
